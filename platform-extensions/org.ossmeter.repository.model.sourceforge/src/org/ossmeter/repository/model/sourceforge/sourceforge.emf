package org.ossmeter.repository.model.sourceforge;

@stub(javaClass="org.ossmeter.repository.model.base.Project")
class Project {
   
}

@stub(javaClass="org.ossmeter.repository.model.base.BugTrackingSystem")
class BugTrackingSystem {
   
}

@stub(javaClass="org.ossmeter.repository.model.base.Person")
class Person {
   
}

//@stub(javaClass="org.ossmeter.repository.model.base.VcsRepository")
//class VcsRepository {
//}

@stub(javaClass="org.ossmeter.repository.model.base.NamedElement")
class NamedElement {
   
}

@stub(javaClass="org.ossmeter.repository.model.base.CommunicationChannel")
class CommunicationChannel {
   
}

class SourceForgeProject extends Project {
  attr String created;
  attr int projectId;
  attr int private;
  attr String shortDesc;
  attr float percentile;
  attr int ranking;
  attr String downloadPage;
  attr String supportPage;
  attr String summaryPage;
  attr String homePage;
  attr String mailingList;
  val Person[*] maintainers;
  val Person[*] developers;
  val OS[*] os;
  val Topic[*] topics;
  val ProgrammingLanguage[*] programminLanguages;
  val Audience[*] audiences;
  val Environment[*] environments;
  val Category[*] categories;
  val FeatureRequest[*] featureRequests;
  val SupportRequest[*] supportRequests;
  val Patch[*] patches;  
  val SourceForgeBugTrackingSystem[*] bts;
  val Donation donation;
  val Discussion[*] discussion;
}

class Discussion extends CommunicationChannel {
   
}

//class SvnRepository extends VcsRepository {
//  attr String browse;
//}

//class MercurialRepository extends VcsRepository {
//}

class OS extends NamedElement {
}

class Topic extends NamedElement {
}

class ProgrammingLanguage extends NamedElement {
}

class Audience extends NamedElement {
}

class Environment extends NamedElement {
}

class Category extends NamedElement {
}


class Donation {
  attr String comment;
  attr DonationStatus status;
  attr String[*] charities;
}

enum DonationStatus {
  notAccepting = 1;
  accepting = 2;
}

enum TrackerStatus {
  open = 1;
  closed = 2;
}


abstract class Tracker extends NamedElement {
  attr String location;
  attr TrackerStatus status; 
}

class SourceForgeBugTrackingSystem extends BugTrackingSystem {
  val Bug[*] bugs;
}

class Bug extends Tracker{

  @key
  attr String description;
  val  Person assignee;
  val  Person submitted;
  attr int priority;
  attr ResolutionStatus resolutionStatus;
  attr BugVisibility bugVisibility;
}

enum BugVisibility {
  public = 1;
  private = 2;
}

enum ResolutionStatus {
  none = 1;
  fixed = 2;
}


abstract class Request extends Tracker {
	attr String summary;
   	attr String created_at;
   	attr String updated_at; 
	val Person creator;
}

class FeatureRequest extends Request {
}


class SupportRequest extends Request {
}

class Patch extends Tracker {
}




