# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /admin                 		controllers.Application.admin
GET     /assets/javascript/routes.js    controllers.Application.jsRoutes

GET     /profile                    controllers.Application.profile
GET		/profile/notification		controllers.Application.profileNotification
POST	/profile/notification		controllers.Account.createNotification
GET		/profile/eventgroup			controllers.Application.profileEventGroup
POST	/profile/eventgroup			controllers.Account.createEventGroup
GET		/profile/event				controllers.Application.profileEvent
POST	/profile/event				controllers.Account.createEvent

# User accounts login/auth routes
GET     /login                      controllers.Application.login
POST    /login                      controllers.Application.doLogin

GET     /logout                     com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider     com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET     /signup                     controllers.Application.signup
POST    /signup                     controllers.Application.doSignup

GET     /accounts/unverified        controllers.Signup.unverified
GET     /authenticate/:provider/denied     controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token     controllers.Signup.verify(token: String)
GET     /accounts/exists            controllers.Signup.exists

GET     /accounts/password/reset/:token     controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset            controllers.Signup.doResetPassword

GET    /accounts/password/change    controllers.Account.changePassword
POST   /accounts/password/change    controllers.Account.doChangePassword

GET     /accounts/verify            controllers.Account.verifyEmail

GET     /accounts/add               controllers.Account.link

GET     /accounts/link              controllers.Account.askLink
POST    /accounts/link              controllers.Account.doLink

GET     /accounts/merge             controllers.Account.askMerge
POST    /accounts/merge             controllers.Account.doMerge

GET     /login/password/forgot     	controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot     	controllers.Signup.doForgotPassword

# Delete
# GET    /accounts/:id/delete        	controllers.Users.delete_confirmation(id: Long)
# POST   /accounts/:id/delete        	controllers.Users.delete(id: Long)

## Projects
# List
GET     /projects                  	controllers.Projects.projects()
# Create
GET     /projects/new               controllers.Projects.create()
POST    /projects/new               controllers.Projects.save()
# Import
POST    /projects/import               controllers.Projects.importProject()
# Read/View
# TODO: use the id instead the shortName 
# GET		/projects/:id				controllers.Projects.view(id:Long)
GET		/projects/:shortName				controllers.Projects.view(shortName:String)
# Update/Edit
# GET 	/projects/:id/edit 			controllers.Projects.edit(id:Long)
# POST 	/projects/:id/edit  		controllers.Projects.update(id:Long)
# Delete
# GET    /projects/:id/delete        	controllers.Projects.delete_confirmation(id: Long)
# POST   /projects/:id/delete        	controllers.Projects.delete(id: Long)

## Users
# List
GET     /users                  	controllers.Users.users()
GET     /users/:id                  controllers.Users.view(id:Long)
# Delete
GET    /users/:id/delete        	controllers.Users.delete_confirmation(id: Long)
POST   /users/:id/delete        	controllers.Users.delete(id: Long)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
