import "javautil.eol";
import "../util/wadlutil.eol";

operation WADL!t_method getName() : String {
	return self.a_id.ftuc();
}

operation WADL!t_method getResultType() : String {
	var representation = self.c_response.first().c_representation.first().a_element;

	if (representation.startsWith("oss:")) {
		return representation.split(":").last();
	} else if (representation.startsWith("metric:")) {
		return representation.split(":").last();
	} else if(representation == "projectList") {
		return "List<Project>";
	}	
}

operation WADL!t_method getMapperResultType() : String {
	var representation = self.c_response.first().c_representation.first().a_element;

	if (representation.startsWith("oss:")) {
		return representation.split(":").last() + ".class";
	} else if (representation.startsWith("metric:")) {
		return representation.split(":").last() + ".class";
	} else if(representation == "projectList") {
		return "TypeFactory.defaultInstance().constructCollectionType(List.class, Project.class)";
	}	
}

operation WADL!t_method getJavaResourceArguments() : String {
	var params = self.getResourceArguments();
	if (params.size() == 0) return "";
	
	var res = params.at(0).first().wadlTypeToJavaType() + " " + params.at(0).last();
	
	if (params.size() > 1) {
		for (p in 1.to(params.size()-1)) {
			res = res + ", " + params.at(p).first().wadlTypeToJavaType() + " " + params.at(p).last();
		}
	}
	return res;
}

operation WADL!t_method getJavaRequiredRequestParams() : String {
	var params = self.getRequiredRequestParams();
	if (params.size() == 0) return "";
	var res = "";
	
	// Determine whether to add the preceeding comma
	if (self.hasResourceArguments()) res = res + ", ";
	
	res = res + params.at(0).first().wadlTypeToJavaType() + " " + params.at(0).last();
	
	if (params.size() > 1) {
		for (p in 1.to(params.size()-1)) {
			res = res + ", " + params.at(p).first().wadlTypeToJavaType() + " " + params.at(p).last();
		}
	}
	return res;
}

operation WADL!t_method getJavaAllRequestParams() : String {
	var params = self.getAllRequestParams();
	if (params.size() == 0) return "";
	var res = "";
	
	// Determine whether to add the preceeding comma
	if (self.hasResourceArguments()) res = res + ", ";
	
	res = res + params.at(0).first().wadlTypeToJavaType() + " " + params.at(0).last();
	
	if (params.size() > 1) {
		for (p in 1.to(params.size()-1)) {
			res = res + ", " + params.at(p).first().wadlTypeToJavaType() + " " + params.at(p).last();
		}
	}
	return res;
}

operation String wadlTypeToJavaType() : String {
	switch (self) {
		case "string": return "String";
		case "integer": return "int";
		default: return "String";
	}
}
