package org.ossmeter.repository.model;

// TODO: Need to use subpackages to organise metamodel information

@db
class ProjectRepository extends NamedElement{
	val Project[*] projects;
}

abstract class NamedElement {
  @searchable
  attr String name;
}

class Project extends NamedElement {
  attr String description;
  attr int year;
  attr boolean active;
  attr String lastExecuted;
  val VcsRepository[*] vcsRepositories;
  val CommunicationChannel[*] communicationChannels;
  val BugTrackingSystem[*] bugTrackingSystems;  
  val Person[*] persons;
  val License[*] licenses;
  val NntpNewsGroup[*] newsgroups;
  val LocalStorage storage;
  val MetricProvider[*] metricProvider;
}

class MetricProvider  extends NamedElement{
	@searchable
	attr String metricProviderId;
	attrBug MetricProviderType type;
	attr String lastExecuted = "-1";
}

@customize
class LocalStorage {
	attr String path;
}

class NntpNewsGroup extends  CommunicationChannel{
	@searchable
	attr Boolean authenticationRequired;
	attr String username;
	attr String password;
	attr int interval;
	attr int port;
	attr String lastArticleChecked;
}

abstract class VcsRepository {
  attr String created_at;
  attr String updated_at;
  attr String url;
}

class Bugzilla extends BugTrackingSystem {
  attr String product;
  attr String component;
}

class SvnRepository extends VcsRepository {
}

class GitRepository extends VcsRepository {
}

abstract class BugTrackingSystem {
	attr String url;
}

abstract class CommunicationChannel {
  attr String url;
}

abstract class Person extends NamedElement {
  attr String homePage;
}


class License {
  attr String url;
  attr LicenseType type;
}

enum LicenseType {
  ApacheTwo = 1;
  GPL = 2;
  EPL = 3;
  GPL2 = 4;
  GPL3 = 5;
  LGPL = 6;
  MIT = 7;
  Mozilla = 8;
  BSD = 9;
  Other = 10;
}

enum MetricProviderType {
	HISTORIC;
	TRANSIENT;
}
