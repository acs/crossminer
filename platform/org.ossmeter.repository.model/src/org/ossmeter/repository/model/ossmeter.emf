package org.ossmeter.repository.model;

// TODO: Need to use subpackages to organise metamodel information

@db
class ProjectRepository extends NamedElement{
	val Project[*] projects;
	val Role[*] roles;
	val ImportData[*] gitHubImportData;
}

class ImportData {
	attr String lastImportedProject;
}

abstract class NamedElement {
  @searchable
  attr String name;
}

class Project extends NamedElement {
  @searchable
  attr String shortName;
  attr String description;
  attr int year;
  attr boolean active;
  attr String lastExecuted;
  ref Project parent;
  val VcsRepository[*] vcsRepositories;
  val CommunicationChannel[*] communicationChannels;
  val BugTrackingSystem[*] bugTrackingSystems;
  val Person[*] persons;
  val License[*] licenses;
  val LocalStorage storage;
  val MetricProvider[*] metricProviderData;
}

class MetricProvider  extends NamedElement{
	@searchable
	attr String metricProviderId;
	attr MetricProviderType type;
	attr String lastExecuted = "-1";
}

@customize
class LocalStorage {
	attr String path;
}

abstract class CommunicationChannel {
  attr String url;
}

abstract class VcsRepository extends NamedElement{
  attr String created_at;
  attr String updated_at;
  attr String url;
}

abstract class BugTrackingSystem {
	attr String url;
}

class Person extends NamedElement {
  attr String homePage;
  ref Role[*] roles;
}

class Role extends NamedElement {
}

class License extends NamedElement{
  attr String url;
}

enum MetricProviderType {
	HISTORIC;
	TRANSIENT;
}
