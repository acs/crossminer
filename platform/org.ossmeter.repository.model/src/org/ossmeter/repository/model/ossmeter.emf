@namespace(uri="org.ossmeter.repository.model", prefix="org.ossmeter.repository.model")
package org.ossmeter.repository.model;

@db
class ProjectRepository extends NamedElement {
  val Project[*] projects;
  val Role[*] roles;
  val ImportData[*] gitHubImportData;
  val ImportData[*] sfImportData;
  val Person[*] persons;
  val License[*] licenses;
}

class ImportData {
  attr String lastImportedProject;
}

abstract class NamedElement {

  @searchable
  attr String name;
}

class Project extends NamedElement {

  @searchable
  attr String shortName;
  attr String description;
  attr int year;
  attr boolean active;
  attr String lastExecuted;
  ref Project parent;
  val VcsRepository[*] vcsRepositories;
  val CommunicationChannel[*] communicationChannels;
  val BugTrackingSystem[*] bugTrackingSystems;
  ref Person[*] persons;
  ref License[*] licenses;
  val LocalStorage storage;
  val MetricProvider[*] metricProviderData;
  attr boolean monitor = true;
  attr boolean inErrorState = false;
}

class MetricProvider extends NamedElement {

  @searchable
  attr String metricProviderId;
  attr MetricProviderType type;
  attr String lastExecuted = "-1";
}

@customize
class LocalStorage {
  attr String path;
}

abstract class CommunicationChannel {
  attr String url;
  ref Person[*] persons;
  attr boolean nonProcessable;
}

abstract class VcsRepository extends NamedElement {
  attr String created_at;
  attr String updated_at;
  attr String url;
  ref Person[*] persons;
}

abstract class BugTrackingSystem {
  attr String url;
  ref Person[*] persons;
}

class Person extends NamedElement {
  attr String homePage;
  ref Role[*] roles;
}

class Role extends NamedElement {
}

class License extends NamedElement {
  attr String url;
}

enum MetricProviderType {
  HISTORIC = 0;
  TRANSIENT = 1;
}

